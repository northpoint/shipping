# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: $(Date:yyyyMMdd)-$(Rev:r)
# name modifies the Build.BuildNumber format used in tag
# https://docs.microsoft.com/en-us/azure/devops/pipelines/process/run-number?view=azure-devops&tabs=yaml

trigger:
- master

variables:

 # Container registry service connection established during pipeline creation
  dockerfilePath: '**/docker/shipping/Dockerfile'
  tag: '$(Build.BuildNumber)'
  serviceName: shipping

pool:
  vmImage: 'ubuntu-latest'

resources:
  repositories:
    - repository: microservicesdemo
      type: github
      name: northpoint/microservices-demo
      endpoint: github-svcconn

stages:
- stage: MavenPackage
  displayName: Maven Scan & Package
  jobs:
    - template: /pipeline-templates/java-build.yaml@microservicesdemo
      parameters:
        mavenPomFile: 'pom.xml'
        jdkVersionOption: 1.8
        goals: package
        version: $(tag)


- stage: DockerBuild
  displayName: Docker Build & Push
  jobs:
    - template: /pipeline-templates/docker-builddeploy-pipeline.yaml@microservicesdemo  # Template reference
      parameters:
        tag: $(tag)
        acrRepo: $(serviceName)
        dockerfilePath: $(dockerfilePath)
        artifact: jar
        buildContext: $(Build.Repository.LocalPath)
    
- stage: HelmDeploy
  displayName: Helm Deploy
  jobs:
  - template: /pipeline-templates/helm-deploy-pipeline.yaml@microservicesdemo
    parameters:
      serviceName: $(serviceName)
      image: $(serviceName):$(tag)
